{"version":3,"sources":["../src/use-promise.tsx","../src/use-local-storage.ts","../src/use-steps.ts","../src/use-script.ts"],"names":["data","React","useState","index","step","useEffect"],"mappings":";;;;AAYO,SAAS,WAAiC,EAAwB,EAAA;AACvE,EAAA,MAAM,CAAC,SAAA,EAAW,UAAU,CAAA,GAAU,eAAS,KAAK,CAAA,CAAA;AACpD,EAAA,MAAM,CAAC,UAAA,EAAY,WAAW,CAAA,GAAU,eAAS,KAAK,CAAA,CAAA;AACtD,EAAA,MAAM,CAAC,UAAA,EAAY,WAAW,CAAA,GAAU,eAAS,KAAK,CAAA,CAAA;AACtD,EAAA,MAAM,CAAC,KAAA,EAAO,QAAQ,CAAA,GAAU,eAAS,IAAI,CAAA,CAAA;AAC7C,EAAA,MAAM,CAAC,IAAA,EAAM,OAAO,CAAA,GAAU,eAAS,IAAI,CAAA,CAAA;AAE3C,EAAM,MAAA,IAAA,GAAY,IAAI,MAAgB,KAAA;AACpC,IAAA,UAAA,CAAW,IAAI,CAAA,CAAA;AAEf,IAAA,OAAO,GAAG,GAAG,MAAM,CAChB,CAAA,IAAA,CAAK,CAACA,KAAS,KAAA;AACd,MAAA,OAAA,CAAQA,KAAI,CAAA,CAAA;AACZ,MAAA,WAAA,CAAY,IAAI,CAAA,CAAA;AAChB,MAAA,UAAA,CAAW,KAAK,CAAA,CAAA;AAEhB,MAAOA,OAAAA,KAAAA,CAAAA;AAAA,KACR,CAAA,CACA,KAAM,CAAA,CAAC,GAAQ,KAAA;AACd,MAAA,QAAA,CAAS,GAAG,CAAA,CAAA;AACZ,MAAA,WAAA,CAAY,IAAI,CAAA,CAAA;AAChB,MAAA,UAAA,CAAW,KAAK,CAAA,CAAA;AAEhB,MAAM,MAAA,GAAA,CAAA;AAAA,KACP,CAAA,CAAA;AAAA,GACL,CAAA;AAEA,EAAO,OAAA,CAAC,EAAE,KAAO,EAAA,IAAA,EAAM,WAAW,UAAY,EAAA,UAAA,IAAc,IAAI,CAAA,CAAA;AAClE,CAAA;ACvCA,IAAM,SAAA,GAAY,OAAO,MAAW,KAAA,WAAA,CAAA;AAEpC,SAAS,OAAA,CAAQ,KAAa,KAAe,EAAA;AAC3C,EAAI,IAAA,SAAA,IAAa,kBAAkB,MAAQ,EAAA;AACzC,IAAO,OAAA,KAAA,KAAU,SACb,YAAa,CAAA,UAAA,CAAW,GAAG,CAC3B,GAAA,YAAA,CAAa,OAAQ,CAAA,GAAA,EAAK,KAAK,CAAA,CAAA;AAAA,GACrC;AACF,CAAA;AAEA,SAAS,QAAQ,GAAa,EAAA;AAC5B,EAAI,IAAA,SAAA,IAAa,kBAAkB,MAAQ,EAAA;AACzC,IAAO,OAAA,YAAA,CAAa,QAAQ,GAAG,CAAA,CAAA;AAAA,GACjC;AACF,CAAA;AAEA,IAAM,aAAA,GAAgB,CAAI,KAAa,KAAA;AACrC,EAAI,IAAA;AACF,IAAO,OAAA,IAAA,CAAK,UAAU,KAAK,CAAA,CAAA;AAAA,WACpB,CAAG,EAAA;AACV,IAAM,MAAA,IAAI,MAAM,wDAAwD,CAAA,CAAA;AAAA,GAC1E;AACF,CAAA,CAAA;AAEA,IAAM,eAAA,GAAkB,CAAC,KAAmB,KAAA;AAC1C,EAAI,IAAA;AACF,IAAO,OAAA,KAAA,IAAS,IAAK,CAAA,KAAA,CAAM,KAAK,CAAA,CAAA;AAAA,WACzB,CAAG,EAAA;AACV,IAAO,OAAA,KAAA,CAAA;AAAA,GACT;AACF,CAAA,CAAA;AAWA,IAAM,kBAAA,GAAqB,CAAC,MAA+B,KAAA;AACzD,EAAM,MAAA,KAAA,GAAQ,IAAI,WAAA,CAAY,mBAAqB,EAAA;AAAA,IACjD,MAAA;AAAA,GACD,CAAA,CAAA;AACD,EAAA,MAAA,CAAO,cAAc,KAAK,CAAA,CAAA;AAC5B,CAAA,CAAA;AAQO,IAAM,kBAAkB,CAC7B,GAAA,EACA,YACA,EAAA,OAAA,GAAqC,EAClC,KAAA;AACH,EAAA,MAAM,EAAE,SAAA,GAAY,aAAe,EAAA,WAAA,GAAc,iBAAoB,GAAA,OAAA,CAAA;AAErE,EAAM,MAAA,OAAA,GAAUC,cAAM,CAAA,MAAA,CAAO,KAAK,CAAA,CAAA;AAElC,EAAA,MAAM,CAAC,KAAA,EAAO,QAAQ,CAAA,GAAIC,SAAY,MAAM;AAhE9C,IAAA,IAAA,EAAA,CAAA;AAiEI,IAAA,OAAO,YAAY,WAAY,CAAA,CAAA,EAAA,GAAA,OAAA,CAAQ,GAAG,CAAX,KAAA,IAAA,GAAA,EAAA,GAAgB,MAAS,CAAI,GAAA,YAAA,CAAA;AAAA,GAC7D,CAAA,CAAA;AAED,EAAA,SAAA,CAAU,MAAM;AACd,IAAM,MAAA,OAAA,GAAU,CAAC,KAA0D,KAAA;AACzE,MAAA,MAAM,WAAW,KAAiB,YAAA,WAAA,CAAA;AAClC,MAAA,MAAM,QAAW,GAAA,QAAA,GAAW,KAAM,CAAA,MAAA,CAAO,MAAM,KAAM,CAAA,GAAA,CAAA;AACrD,MAAA,MAAM,QAAW,GAAA,QAAA,GAAW,KAAM,CAAA,MAAA,CAAO,WAAW,KAAM,CAAA,QAAA,CAAA;AAE1D,MAAA,IAAA,CACG,YAAY,KAAM,CAAA,WAAA,KAAgB,MAAO,CAAA,YAAA,KAC1C,aAAa,GACb,EAAA;AACA,QAAS,QAAA,CAAA,WAAA,CAAY,QAAY,IAAA,IAAA,GAAA,QAAA,GAAA,KAAA,CAAS,CAAC,CAAA,CAAA;AAAA,OAC7C;AAAA,KACF,CAAA;AAEA,IAAA,IAAI,SAAW,EAAA;AACb,MAAO,MAAA,CAAA,gBAAA,CAAiB,WAAW,OAAO,CAAA,CAAA;AAC1C,MAAO,MAAA,CAAA,gBAAA,CAAsB,qBAAqB,OAAO,CAAA,CAAA;AAAA,KAC3D;AACA,IAAA,OAAO,MAAM;AACX,MAAA,IAAI,SAAW,EAAA;AACb,QAAO,MAAA,CAAA,mBAAA,CAAoB,WAAW,OAAO,CAAA,CAAA;AAC7C,QAAO,MAAA,CAAA,mBAAA,CAAyB,qBAAqB,OAAO,CAAA,CAAA;AAAA,OAC9D;AAAA,KACF,CAAA;AAAA,GACF,EAAG,EAAE,CAAA,CAAA;AAEL,EAAA,SAAA,CAAU,MAAM;AACd,IAAI,IAAA,CAAC,QAAQ,OAAS,EAAA;AACpB,MAAA,OAAA,CAAQ,OAAU,GAAA,IAAA,CAAA;AAClB,MAAA,OAAA;AAAA,KACF;AACA,IAAM,MAAA,eAAA,GAAkB,UAAU,KAAK,CAAA,CAAA;AACvC,IAAI,IAAA,OAAA,CAAQ,GAAG,CAAA,KAAM,eAAiB,EAAA;AACpC,MAAA,OAAA,CAAQ,KAAK,eAAe,CAAA,CAAA;AAC5B,MAAA,kBAAA,CAAmB,EAAE,GAAA,EAAK,QAAU,EAAA,eAAA,EAAiB,CAAA,CAAA;AAAA,KACvD;AAAA,GACF,EAAG,CAAC,KAAK,CAAC,CAAA,CAAA;AAEV,EAAA,OAAO,CAAC,KAAA,KAAU,KAAY,CAAA,GAAA,YAAA,GAAe,OAAO,QAAQ,CAAA,CAAA;AAC9D,EAAA;ACzGA,IAAM,UAAa,GAAA,CAAA,CAAA;AAWZ,IAAM,WAAW,CAAkC;AAAA,EACxD,KAAA;AAAA,EACA,WAAc,GAAA,UAAA;AAChB,CAAwB,KAAA;AACtB,EAAA,MAAM,CAAC,SAAW,EAAA,YAAY,CAAIA,GAAAA,QAAAA,CAAmB,EAAE,CAAA,CAAA;AACvD,EAAA,MAAM,CAAC,KAAA,EAAO,QAAQ,CAAA,GAAIA,SAAiB,WAAW,CAAA,CAAA;AACtD,EAAM,MAAA,IAAA,GAAO,MAAM,KAAK,CAAA,CAAA;AACxB,EAAM,MAAA,OAAA,GAAU,CAACC,MAA2B,KAAA;AAC1C,IAAI,IAAA,OAAOA,WAAU,QAAU,EAAA;AAC7B,MAAIA,IAAAA,MAAAA,GAAQ,YAAmB,OAAA,UAAA,CAAA;AAC/B,MAAA,IAAIA,MAAS,IAAA,KAAA,CAAM,MAAQ,EAAA,OAAO,MAAM,MAAS,GAAA,CAAA,CAAA;AACjD,MAAOA,OAAAA,MAAAA,CAAAA;AAAA,KACT;AAEA,IAAA,OAAO,MAAM,SAAU,CAAA,CAACC,UAASA,KAAK,CAAA,EAAA,KAAOD,MAAK,CAAK,IAAA,UAAA,CAAA;AAAA,GACzD,CAAA;AAEA,EAAA,MAAM,KAAK,CAAC,QAAA,KAA8B,QAAS,CAAA,OAAA,CAAQ,QAAQ,CAAC,CAAA,CAAA;AACpE,EAAA,MAAM,IAAO,GAAA,MAAM,EAAG,CAAA,KAAA,GAAQ,CAAC,CAAA,CAAA;AAC/B,EAAA,MAAM,IAAO,GAAA,MAAM,EAAG,CAAA,KAAA,GAAQ,CAAC,CAAA,CAAA;AAE/B,EAAM,MAAA,WAAA,GAAc,CAAC,YAAA,GAAgC,KAAU,KAAA;AAC7D,IAAM,MAAA,iBAAA,GAAoB,QAAQ,YAAY,CAAA,CAAA;AAC9C,IAAM,MAAA,EAAA,GAAK,KAAM,CAAA,iBAAiB,CAAE,CAAA,EAAA,CAAA;AAEpC,IAAa,YAAA,CAAA,CAAC,mBAAG,IAAI,GAAI,CAAA,CAAC,GAAG,SAAW,EAAA,EAAE,CAAC,CAAC,CAAC,CAAA,CAAA;AAAA,GAC/C,CAAA;AAEA,EAAM,MAAA,aAAA,GAAgB,CAAC,cAAA,GAAkC,KAAU,KAAA;AACjE,IAAM,MAAA,mBAAA,GAAsB,QAAQ,cAAc,CAAA,CAAA;AAClD,IAAM,MAAA,MAAA,GAAS,KAAM,CAAA,mBAAmB,CAAE,CAAA,EAAA,CAAA;AAE1C,IAAA,YAAA,CAAa,UAAU,MAAO,CAAA,CAAC,EAAO,KAAA,EAAA,KAAO,MAAM,CAAC,CAAA,CAAA;AAAA,GACtD,CAAA;AAEA,EAAM,MAAA,KAAA,GAAQ,CAAC,SAAA,GAAY,WAAgB,KAAA;AACzC,IAAA,QAAA,CAAS,SAAS,CAAA,CAAA;AAClB,IAAA,YAAA,CAAa,EAAE,CAAA,CAAA;AAAA,GACjB,CAAA;AAEA,EAAO,OAAA;AAAA,IACL,WAAA;AAAA,IACA,SAAA;AAAA,IACA,KAAA;AAAA,IACA,MAAA,EAAQ,KAAU,KAAA,KAAA,CAAM,MAAS,GAAA,CAAA;AAAA,IACjC,UAAY,EAAA,EAAE,IAAM,EAAA,IAAA,EAAM,EAAG,EAAA;AAAA,IAC7B,IAAA;AAAA,IACA,aAAA;AAAA,IACA,KAAA;AAAA,GACF,CAAA;AACF,EAAA;AC1Da,IAAA,SAAA,GAAY,CAAC,GAAwB,KAAA;AAChD,EAAA,MAAM,CAAC,MAAQ,EAAA,SAAS,IAAID,QAAiB,CAAA,GAAA,GAAM,YAAY,MAAM,CAAA,CAAA;AAErE,EAAAG,SAAAA;AAAA,IACE,MAAM;AACJ,MAAA,IAAI,CAAC,GAAK,EAAA;AACR,QAAA,SAAA,CAAU,MAAM,CAAA,CAAA;AAChB,QAAA,OAAA;AAAA,OACF;AAIA,MAAA,IAAI,MAAoB,GAAA,QAAA,CAAS,aAAc,CAAA,CAAA,YAAA,EAAe,GAAG,CAAI,EAAA,CAAA,CAAA,CAAA;AAErE,MAAA,IAAI,CAAC,MAAQ,EAAA;AAEX,QAAS,MAAA,GAAA,QAAA,CAAS,cAAc,QAAQ,CAAA,CAAA;AACxC,QAAA,MAAA,CAAO,GAAM,GAAA,GAAA,CAAA;AACb,QAAA,MAAA,CAAO,KAAQ,GAAA,IAAA,CAAA;AACf,QAAO,MAAA,CAAA,YAAA,CAAa,eAAe,SAAS,CAAA,CAAA;AAE5C,QAAS,QAAA,CAAA,IAAA,CAAK,YAAY,MAAM,CAAA,CAAA;AAIhC,QAAM,MAAA,qBAAA,GAAwB,CAAC,KAAiB,KAAA;AAC9C,UAAQ,MAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,MAAA,CAAA,YAAA;AAAA,YACN,aAAA;AAAA,YACA,KAAA,CAAM,IAAS,KAAA,MAAA,GAAS,OAAU,GAAA,OAAA;AAAA,WAAA,CAAA;AAAA,SAEtC,CAAA;AAEA,QAAO,MAAA,CAAA,gBAAA,CAAiB,QAAQ,qBAAqB,CAAA,CAAA;AACrD,QAAO,MAAA,CAAA,gBAAA,CAAiB,SAAS,qBAAqB,CAAA,CAAA;AAAA,OACjD,MAAA;AAEL,QAAU,SAAA,CAAA,MAAA,CAAO,YAAa,CAAA,aAAa,CAAW,CAAA,CAAA;AAAA,OACxD;AAKA,MAAM,MAAA,iBAAA,GAAoB,CAAC,KAAiB,KAAA;AAC1C,QAAA,SAAA,CAAU,KAAM,CAAA,IAAA,KAAS,MAAS,GAAA,OAAA,GAAU,OAAO,CAAA,CAAA;AAAA,OACrD,CAAA;AAGA,MAAO,MAAA,CAAA,gBAAA,CAAiB,QAAQ,iBAAiB,CAAA,CAAA;AACjD,MAAO,MAAA,CAAA,gBAAA,CAAiB,SAAS,iBAAiB,CAAA,CAAA;AAGlD,MAAA,OAAO,MAAM;AACX,QAAA,IAAI,MAAQ,EAAA;AACV,UAAO,MAAA,CAAA,mBAAA,CAAoB,QAAQ,iBAAiB,CAAA,CAAA;AACpD,UAAO,MAAA,CAAA,mBAAA,CAAoB,SAAS,iBAAiB,CAAA,CAAA;AAAA,SACvD;AAAA,OACF,CAAA;AAAA,KACF;AAAA,IACA,CAAC,GAAG,CAAA;AAAA;AAAA,GACN,CAAA;AAEA,EAAO,OAAA,MAAA,CAAA;AACT","file":"index.mjs","sourcesContent":["import * as React from 'react'\n\nexport interface UsePromise {\n  error?: Error | null\n  data?: any\n  isLoading: boolean\n  isResolved: boolean\n  isRejected: boolean\n}\n\ntype CallbackFn = (...args: any[]) => Promise<any>\n\nexport function usePromise<C extends CallbackFn>(fn: C): [UsePromise, C] {\n  const [isLoading, setLoading] = React.useState(false)\n  const [isResolved, setResolved] = React.useState(false)\n  const [isRejected, setRejected] = React.useState(false)\n  const [error, setError] = React.useState(null)\n  const [data, setData] = React.useState(null)\n\n  const call: any = (...params: any) => {\n    setLoading(true)\n\n    return fn(...params)\n      .then((data) => {\n        setData(data)\n        setResolved(true)\n        setLoading(false)\n\n        return data\n      })\n      .catch((err) => {\n        setError(err)\n        setRejected(true)\n        setLoading(false)\n\n        throw err\n      })\n  }\n\n  return [{ error, data, isLoading, isResolved, isRejected }, call]\n}\n","import React, { useState, useEffect } from 'react'\nconst isBrowser = typeof window !== 'undefined'\n\nfunction setItem(key: string, value: string) {\n  if (isBrowser && 'localStorage' in window) {\n    return value === undefined\n      ? localStorage.removeItem(key)\n      : localStorage.setItem(key, value)\n  }\n}\n\nfunction getItem(key: string) {\n  if (isBrowser && 'localStorage' in window) {\n    return localStorage.getItem(key)\n  }\n}\n\nconst serializeJSON = <T>(value: T) => {\n  try {\n    return JSON.stringify(value)\n  } catch (e) {\n    throw new Error('useLocalStorage: failed to serialize the value to JSON')\n  }\n}\n\nconst deserializeJSON = (value?: string) => {\n  try {\n    return value && JSON.parse(value)\n  } catch (e) {\n    return value\n  }\n}\n\nexport interface UseLocalStorageOptions<T> {\n  serialize?<T>(value: T): string\n  deserialize?(value?: string): T\n}\n\ntype StorageEventDetail = {\n  key: string\n  newValue?: string\n}\nconst triggerCustomEvent = (detail: StorageEventDetail) => {\n  const event = new CustomEvent('use-local-storage', {\n    detail,\n  })\n  window.dispatchEvent(event)\n}\n\n/**\n * Works like useState but stores the value as JSON in localStorage.\n * Updates work across multiple tabs using StorageEvent.\n *\n * Setting undefined will remote the localStorage item.\n */\nexport const useLocalStorage = <T = string>(\n  key: string,\n  defaultValue: T,\n  options: UseLocalStorageOptions<T> = {}\n) => {\n  const { serialize = serializeJSON, deserialize = deserializeJSON } = options\n\n  const initRef = React.useRef(false)\n\n  const [value, setValue] = useState<T>(() => {\n    return isBrowser ? deserialize(getItem(key) ?? undefined) : defaultValue\n  })\n\n  useEffect(() => {\n    const handler = (event: StorageEvent | CustomEvent<StorageEventDetail>) => {\n      const isCustom = event instanceof CustomEvent\n      const eventKey = isCustom ? event.detail.key : event.key\n      const newValue = isCustom ? event.detail.newValue : event.newValue\n\n      if (\n        (isCustom || event.storageArea === window.localStorage) &&\n        eventKey === key\n      ) {\n        setValue(deserialize(newValue ?? undefined))\n      }\n    }\n\n    if (isBrowser) {\n      window.addEventListener('storage', handler)\n      window.addEventListener<any>('use-local-storage', handler)\n    }\n    return () => {\n      if (isBrowser) {\n        window.removeEventListener('storage', handler)\n        window.removeEventListener<any>('use-local-storage', handler)\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    if (!initRef.current) {\n      initRef.current = true\n      return\n    }\n    const serializedValue = serialize(value)\n    if (getItem(key) !== serializedValue) {\n      setItem(key, serializedValue)\n      triggerCustomEvent({ key, newValue: serializedValue })\n    }\n  }, [value])\n\n  return [value === undefined ? defaultValue : value, setValue] as const\n}\n","import { useState } from 'react'\n\nconst FIRST_STEP = 0\n\ntype Step = {\n  id: string\n}\n\ntype UseStepsProps<S> = {\n  steps: S[]\n  initialStep?: number\n}\n\nexport const useSteps = <S extends { id: string } = Step>({\n  steps,\n  initialStep = FIRST_STEP,\n}: UseStepsProps<S>) => {\n  const [completed, setCompleted] = useState<string[]>([])\n  const [index, setIndex] = useState<number>(initialStep)\n  const step = steps[index]\n  const inRange = (index: number | string) => {\n    if (typeof index === 'number') {\n      if (index < FIRST_STEP) return FIRST_STEP\n      if (index >= steps.length) return steps.length - 1\n      return index\n    }\n\n    return steps.findIndex((step) => step.id === index) || FIRST_STEP\n  }\n\n  const go = (nextStep: number | string) => setIndex(inRange(nextStep))\n  const next = () => go(index + 1)\n  const prev = () => go(index - 1)\n\n  const setComplete = (completeStep: number | string = index) => {\n    const completeStepIndex = inRange(completeStep)\n    const id = steps[completeStepIndex].id\n\n    setCompleted([...new Set([...completed, id])])\n  }\n\n  const setUncomplete = (uncompleteStep: number | string = index) => {\n    const uncompleteStepIndex = inRange(uncompleteStep)\n    const stepId = steps[uncompleteStepIndex].id\n\n    setCompleted(completed.filter((id) => id !== stepId))\n  }\n\n  const reset = (resetStep = initialStep) => {\n    setIndex(resetStep)\n    setCompleted([])\n  }\n\n  return {\n    setComplete,\n    completed,\n    index,\n    isLast: index === steps.length - 1,\n    navigation: { next, prev, go },\n    step,\n    setUncomplete,\n    reset,\n  }\n}\n","import { useEffect, useState } from 'react'\n\nexport type Status = 'idle' | 'loading' | 'ready' | 'error'\nexport type ScriptElt = HTMLScriptElement | null\n\nexport const useScript = (src: string): Status => {\n  const [status, setStatus] = useState<Status>(src ? 'loading' : 'idle')\n\n  useEffect(\n    () => {\n      if (!src) {\n        setStatus('idle')\n        return\n      }\n\n      // Fetch existing script element by src\n      // It may have been added by another instance of this hook\n      let script: ScriptElt = document.querySelector(`script[src=\"${src}\"]`)\n\n      if (!script) {\n        // Create script\n        script = document.createElement('script')\n        script.src = src\n        script.async = true\n        script.setAttribute('data-status', 'loading')\n        // Add script to document body\n        document.body.appendChild(script)\n\n        // Store status in attribute on script\n        // This can be read by other instances of this hook\n        const setAttributeFromEvent = (event: Event) => {\n          script?.setAttribute(\n            'data-status',\n            event.type === 'load' ? 'ready' : 'error'\n          )\n        }\n\n        script.addEventListener('load', setAttributeFromEvent)\n        script.addEventListener('error', setAttributeFromEvent)\n      } else {\n        // Grab existing script status from attribute and set to state.\n        setStatus(script.getAttribute('data-status') as Status)\n      }\n\n      // Script event handler to update status in state\n      // Note: Even if the script already exists we still need to add\n      // event handlers to update the state for *this* hook instance.\n      const setStateFromEvent = (event: Event) => {\n        setStatus(event.type === 'load' ? 'ready' : 'error')\n      }\n\n      // Add event listeners\n      script.addEventListener('load', setStateFromEvent)\n      script.addEventListener('error', setStateFromEvent)\n\n      // Remove event listeners on cleanup\n      return () => {\n        if (script) {\n          script.removeEventListener('load', setStateFromEvent)\n          script.removeEventListener('error', setStateFromEvent)\n        }\n      }\n    },\n    [src] // Only re-run effect if script src changes\n  )\n\n  return status\n}\n"]}