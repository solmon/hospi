{"version":3,"sources":["../src/use-promise.tsx","../src/use-local-storage.ts","../src/use-steps.ts","../src/use-script.ts"],"names":["data","React","useState","index","step","useEffect"],"mappings":"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","sourcesContent":["import * as React from 'react'\n\nexport interface UsePromise {\n  error?: Error | null\n  data?: any\n  isLoading: boolean\n  isResolved: boolean\n  isRejected: boolean\n}\n\ntype CallbackFn = (...args: any[]) => Promise<any>\n\nexport function usePromise<C extends CallbackFn>(fn: C): [UsePromise, C] {\n  const [isLoading, setLoading] = React.useState(false)\n  const [isResolved, setResolved] = React.useState(false)\n  const [isRejected, setRejected] = React.useState(false)\n  const [error, setError] = React.useState(null)\n  const [data, setData] = React.useState(null)\n\n  const call: any = (...params: any) => {\n    setLoading(true)\n\n    return fn(...params)\n      .then((data) => {\n        setData(data)\n        setResolved(true)\n        setLoading(false)\n\n        return data\n      })\n      .catch((err) => {\n        setError(err)\n        setRejected(true)\n        setLoading(false)\n\n        throw err\n      })\n  }\n\n  return [{ error, data, isLoading, isResolved, isRejected }, call]\n}\n","import React, { useState, useEffect } from 'react'\nconst isBrowser = typeof window !== 'undefined'\n\nfunction setItem(key: string, value: string) {\n  if (isBrowser && 'localStorage' in window) {\n    return value === undefined\n      ? localStorage.removeItem(key)\n      : localStorage.setItem(key, value)\n  }\n}\n\nfunction getItem(key: string) {\n  if (isBrowser && 'localStorage' in window) {\n    return localStorage.getItem(key)\n  }\n}\n\nconst serializeJSON = <T>(value: T) => {\n  try {\n    return JSON.stringify(value)\n  } catch (e) {\n    throw new Error('useLocalStorage: failed to serialize the value to JSON')\n  }\n}\n\nconst deserializeJSON = (value?: string) => {\n  try {\n    return value && JSON.parse(value)\n  } catch (e) {\n    return value\n  }\n}\n\nexport interface UseLocalStorageOptions<T> {\n  serialize?<T>(value: T): string\n  deserialize?(value?: string): T\n}\n\ntype StorageEventDetail = {\n  key: string\n  newValue?: string\n}\nconst triggerCustomEvent = (detail: StorageEventDetail) => {\n  const event = new CustomEvent('use-local-storage', {\n    detail,\n  })\n  window.dispatchEvent(event)\n}\n\n/**\n * Works like useState but stores the value as JSON in localStorage.\n * Updates work across multiple tabs using StorageEvent.\n *\n * Setting undefined will remote the localStorage item.\n */\nexport const useLocalStorage = <T = string>(\n  key: string,\n  defaultValue: T,\n  options: UseLocalStorageOptions<T> = {}\n) => {\n  const { serialize = serializeJSON, deserialize = deserializeJSON } = options\n\n  const initRef = React.useRef(false)\n\n  const [value, setValue] = useState<T>(() => {\n    return isBrowser ? deserialize(getItem(key) ?? undefined) : defaultValue\n  })\n\n  useEffect(() => {\n    const handler = (event: StorageEvent | CustomEvent<StorageEventDetail>) => {\n      const isCustom = event instanceof CustomEvent\n      const eventKey = isCustom ? event.detail.key : event.key\n      const newValue = isCustom ? event.detail.newValue : event.newValue\n\n      if (\n        (isCustom || event.storageArea === window.localStorage) &&\n        eventKey === key\n      ) {\n        setValue(deserialize(newValue ?? undefined))\n      }\n    }\n\n    if (isBrowser) {\n      window.addEventListener('storage', handler)\n      window.addEventListener<any>('use-local-storage', handler)\n    }\n    return () => {\n      if (isBrowser) {\n        window.removeEventListener('storage', handler)\n        window.removeEventListener<any>('use-local-storage', handler)\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    if (!initRef.current) {\n      initRef.current = true\n      return\n    }\n    const serializedValue = serialize(value)\n    if (getItem(key) !== serializedValue) {\n      setItem(key, serializedValue)\n      triggerCustomEvent({ key, newValue: serializedValue })\n    }\n  }, [value])\n\n  return [value === undefined ? defaultValue : value, setValue] as const\n}\n","import { useState } from 'react'\n\nconst FIRST_STEP = 0\n\ntype Step = {\n  id: string\n}\n\ntype UseStepsProps<S> = {\n  steps: S[]\n  initialStep?: number\n}\n\nexport const useSteps = <S extends { id: string } = Step>({\n  steps,\n  initialStep = FIRST_STEP,\n}: UseStepsProps<S>) => {\n  const [completed, setCompleted] = useState<string[]>([])\n  const [index, setIndex] = useState<number>(initialStep)\n  const step = steps[index]\n  const inRange = (index: number | string) => {\n    if (typeof index === 'number') {\n      if (index < FIRST_STEP) return FIRST_STEP\n      if (index >= steps.length) return steps.length - 1\n      return index\n    }\n\n    return steps.findIndex((step) => step.id === index) || FIRST_STEP\n  }\n\n  const go = (nextStep: number | string) => setIndex(inRange(nextStep))\n  const next = () => go(index + 1)\n  const prev = () => go(index - 1)\n\n  const setComplete = (completeStep: number | string = index) => {\n    const completeStepIndex = inRange(completeStep)\n    const id = steps[completeStepIndex].id\n\n    setCompleted([...new Set([...completed, id])])\n  }\n\n  const setUncomplete = (uncompleteStep: number | string = index) => {\n    const uncompleteStepIndex = inRange(uncompleteStep)\n    const stepId = steps[uncompleteStepIndex].id\n\n    setCompleted(completed.filter((id) => id !== stepId))\n  }\n\n  const reset = (resetStep = initialStep) => {\n    setIndex(resetStep)\n    setCompleted([])\n  }\n\n  return {\n    setComplete,\n    completed,\n    index,\n    isLast: index === steps.length - 1,\n    navigation: { next, prev, go },\n    step,\n    setUncomplete,\n    reset,\n  }\n}\n","import { useEffect, useState } from 'react'\n\nexport type Status = 'idle' | 'loading' | 'ready' | 'error'\nexport type ScriptElt = HTMLScriptElement | null\n\nexport const useScript = (src: string): Status => {\n  const [status, setStatus] = useState<Status>(src ? 'loading' : 'idle')\n\n  useEffect(\n    () => {\n      if (!src) {\n        setStatus('idle')\n        return\n      }\n\n      // Fetch existing script element by src\n      // It may have been added by another instance of this hook\n      let script: ScriptElt = document.querySelector(`script[src=\"${src}\"]`)\n\n      if (!script) {\n        // Create script\n        script = document.createElement('script')\n        script.src = src\n        script.async = true\n        script.setAttribute('data-status', 'loading')\n        // Add script to document body\n        document.body.appendChild(script)\n\n        // Store status in attribute on script\n        // This can be read by other instances of this hook\n        const setAttributeFromEvent = (event: Event) => {\n          script?.setAttribute(\n            'data-status',\n            event.type === 'load' ? 'ready' : 'error'\n          )\n        }\n\n        script.addEventListener('load', setAttributeFromEvent)\n        script.addEventListener('error', setAttributeFromEvent)\n      } else {\n        // Grab existing script status from attribute and set to state.\n        setStatus(script.getAttribute('data-status') as Status)\n      }\n\n      // Script event handler to update status in state\n      // Note: Even if the script already exists we still need to add\n      // event handlers to update the state for *this* hook instance.\n      const setStateFromEvent = (event: Event) => {\n        setStatus(event.type === 'load' ? 'ready' : 'error')\n      }\n\n      // Add event listeners\n      script.addEventListener('load', setStateFromEvent)\n      script.addEventListener('error', setStateFromEvent)\n\n      // Remove event listeners on cleanup\n      return () => {\n        if (script) {\n          script.removeEventListener('load', setStateFromEvent)\n          script.removeEventListener('error', setStateFromEvent)\n        }\n      }\n    },\n    [src] // Only re-run effect if script src changes\n  )\n\n  return status\n}\n"]}